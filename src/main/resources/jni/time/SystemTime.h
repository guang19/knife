/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <time.h>


//clock_gettime函数的结构体
typedef struct timespec _timespec;

/* Header for class com_github_guang19_knife_timeutils_SystemTime */

#ifndef _Included_com_github_guang19_knife_timeutils_SystemTime
#define _Included_com_github_guang19_knife_timeutils_SystemTime
#ifdef __cplusplus
extern "C" {
#endif

/*
 *  以clock_gettime函数实现获取当前时间戳
 *
 *  返回当前时间戳
 *  根据我的测试clock_gettime确实比gettimeofday要快
 *  测试条件: for循环 999999999 次
 *  频繁的调用,clock_gettime性能确实优于gettimeofday,大约快2s左右
 *
 * Class:     com_github_guang19_knife_timeutils_SystemTime
 * Method:    currentTime
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_github_guang19_knife_timeutils_SystemTime_currentTimeMillis
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif

//以下是clock_gettime函数测试代码

//void clock_gettime_t()
//{
//    _timespec start;
//    clock_gettime(CLOCK_REALTIME,&start);
//    unsigned long start_t = (start.tv_sec * 1000) + (start.tv_nsec / 1000000);
//
//    _timespec t;
//    for (int i = 0; i < 999999999 ; ++i)
//    {
//           clock_gettime(CLOCK_REALTIME,&t);
//    }
//
//    _timespec end;
//    clock_gettime(CLOCK_REALTIME,&end);
//    unsigned long end_t = (end.tv_sec * 1000) + (end.tv_nsec / 1000000);
//
//    printf("%ld\n",start_t);
//    printf("%ld\n",end_t);
//    printf("%ld\n",end_t - start_t);
//}


//以下是gettimeofday函数测试代码

//void gettimeofday_t()
//{
//    _timeval start;
//    gettimeofday(&start, NULL);
//    unsigned long start_t = (start.tv_sec * 1000) + (start.tv_usec / 1000);
//
//    _timeval t;
//    for (int i = 0; i < 999999999; ++i)
//    {
//          gettimeofday(&t,NULL);
//    }
//
//    _timeval end;
//    gettimeofday(&end, NULL);
//    unsigned long end_t = (end.tv_sec * 1000) + (end.tv_usec / 1000);
//
//    printf("%ld\n",start_t);
//    printf("%ld\n",end_t);
//    printf("%ld\n",end_t - start_t);
//}